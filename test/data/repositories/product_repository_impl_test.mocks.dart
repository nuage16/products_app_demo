// Mocks generated by Mockito 5.4.4 from annotations
// in products_app_demo/test/data/repositories/product_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:fpdart/fpdart.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:products_app_demo/core/errors/failure.dart' as _i5;
import 'package:products_app_demo/core/params/product_params.dart' as _i7;
import 'package:products_app_demo/domain/entities/product_details_ent.dart'
    as _i9;
import 'package:products_app_demo/domain/entities/product_list_ent.dart' as _i6;
import 'package:products_app_demo/domain/repositories/product_repository.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ProductRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductRepository extends _i1.Mock implements _i2.ProductRepository {
  @override
  _i3.Future<_i4.Either<_i5.Failure, _i6.ProductListEnt>> getProductList(
          _i7.ProductListParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductList,
          [params],
        ),
        returnValue:
            _i3.Future<_i4.Either<_i5.Failure, _i6.ProductListEnt>>.value(
                _i8.dummyValue<_i4.Either<_i5.Failure, _i6.ProductListEnt>>(
          this,
          Invocation.method(
            #getProductList,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i4.Either<_i5.Failure, _i6.ProductListEnt>>.value(
                _i8.dummyValue<_i4.Either<_i5.Failure, _i6.ProductListEnt>>(
          this,
          Invocation.method(
            #getProductList,
            [params],
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.Failure, _i6.ProductListEnt>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, _i9.ProductDetailsEnt>> getProduct(
          _i7.ProductParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProduct,
          [params],
        ),
        returnValue:
            _i3.Future<_i4.Either<_i5.Failure, _i9.ProductDetailsEnt>>.value(
                _i8.dummyValue<_i4.Either<_i5.Failure, _i9.ProductDetailsEnt>>(
          this,
          Invocation.method(
            #getProduct,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i4.Either<_i5.Failure, _i9.ProductDetailsEnt>>.value(
                _i8.dummyValue<_i4.Either<_i5.Failure, _i9.ProductDetailsEnt>>(
          this,
          Invocation.method(
            #getProduct,
            [params],
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.Failure, _i9.ProductDetailsEnt>>);
}
